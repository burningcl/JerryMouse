apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    androidTestCompile project(':core')
}

final def variants = project.android.testVariants

import com.skyline.db.jerrymouse.generator.ByteCodeMapperGenerator

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        System.out.println("WARNING: Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        System.out.println("WARNING: start " + javaCompile.destinationDir.toString());
        List<String> strs = new ByteCodeMapperGenerator().gen(
                javaCompile.destinationDir.toString(),
                javaCompile.classpath.asPath,
                project.android.bootClasspath.join(File.pathSeparator)
        )
        for (String str : strs) {
            System.out.println("WARNING: " + str);
        }
    }
}
